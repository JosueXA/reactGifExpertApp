{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAmBhD,OACE,sBAAMC,SAXa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAMhB,SACE,uBACEO,KAAK,OACLC,MAAQT,EACRU,SApBoB,SAACP,GAEzBF,EAAeE,EAAEQ,OAAOF,a,+BCTfG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEfC,EAFe,iDAEkCC,UAAUH,GAF5C,+DAGFI,MAAOF,GAHL,cAGfG,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVjB,kBAcdM,GAdc,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAInC,OACE,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCLEO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEhBd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAJ+B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAqB1C,OAdAC,qBAAW,WAETxB,EAASC,GACNwB,MAAM,SAAAC,GAELH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAKd,CAAEpB,IAEEqB,EDlB2BK,CAAc1B,GAAlCa,EAFyB,EAE/BN,KAAca,EAFiB,EAEjBA,QAEtB,OACE,qCACE,qBAAIJ,UAAU,oCAAd,cAAqDhB,EAArD,OAEEoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEIH,EAAOJ,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAEOA,GADEA,EAAIC,aEYVgB,EA1BM,WAAO,IAAD,EAEWzC,mBAAS,CAAC,cAFrB,mBAElB0C,EAFkB,KAEN3C,EAFM,KAIzB,OACE,qCAEE,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEI2C,EAAWnB,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEEA,SAAWA,GADLA,Y,MCZpB6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b6d07447.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    \r\n    setInputValue( e.target.value );\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if( inputValue.trim().length > 2){\r\n      setCategories( cats => [ inputValue, ...cats] );\r\n      setInputValue('');\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <input\r\n        type=\"text\"\r\n        value={ inputValue }\r\n        onChange={ handleInputChange }\r\n      />\r\n    </form>\r\n  )\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async( category ) => {\r\n\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=q4L98FZEQtLafwg7j1SMNApTGu9i4buu`;\r\n  const resp = await fetch( url );\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map( img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  });\r\n\r\n  return gifs;\r\n  \r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n  //console.log( id, title, url );\r\n\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\" >\r\n      <img src={ url } alt={ title } />\r\n      <p>{ title }</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const { data: images, loading } = useFetchGifs( category );\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\r\n\r\n      { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n      \r\n      <div className=\"card-grid\">\r\n        {\r\n          images.map( img => (\r\n            <GifGridItem \r\n              key= { img.id }\r\n              { ...img }\r\n            />\r\n          ))\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect( () => {\r\n\r\n    getGifs( category )\r\n      .then( imgs => {\r\n\r\n        setState({\r\n          data: imgs,\r\n          loading: false\r\n        });\r\n\r\n      });\r\n    \r\n  }, [ category ]);\r\n\r\n  return state;\r\n\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n\r\n  return(\r\n    <>\r\n\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={ setCategories } />\r\n      <hr/>\r\n\r\n      <ol>\r\n        { \r\n          categories.map( category => (\r\n            <GifGrid \r\n              key={ category }\r\n              category={ category }/>\r\n          ))\r\n        }\r\n      </ol>\r\n\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}